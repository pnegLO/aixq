{"ast":null,"code":"import axios from 'axios';\nimport io from 'socket.io-client';\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\nlet socket;\n\n/**\n * 初始化Socket.io连接\n * @param {Object} callbacks - 回调函数对象\n * @returns {Object} - socket实例\n */\nexport const initializeSocket = callbacks => {\n  const {\n    onGameUpdate,\n    onPlayerJoined,\n    onGameStarted,\n    onError,\n    onChatMessage,\n    onUndoRequested,\n    onUndoResponded,\n    onPlayerSurrendered\n  } = callbacks;\n  socket = io(process.env.REACT_APP_SOCKET_URL || 'http://localhost:5000');\n  socket.on('connect', () => {\n    console.log('Connected to WebSocket server');\n  });\n  socket.on('game-update', data => {\n    if (onGameUpdate) onGameUpdate(data);\n  });\n  socket.on('player-joined', data => {\n    if (onPlayerJoined) onPlayerJoined(data);\n  });\n  socket.on('game-started', data => {\n    if (onGameStarted) onGameStarted(data);\n  });\n  socket.on('chat-message', data => {\n    if (onChatMessage) onChatMessage(data);\n  });\n  socket.on('undo-requested', data => {\n    if (onUndoRequested) onUndoRequested(data);\n  });\n  socket.on('undo-responded', data => {\n    if (onUndoResponded) onUndoResponded(data);\n  });\n  socket.on('player-surrendered', data => {\n    if (onPlayerSurrendered) onPlayerSurrendered(data);\n  });\n  socket.on('error', error => {\n    console.error('Socket error:', error);\n    if (onError) onError(error);\n  });\n  return socket;\n};\n\n/**\n * 创建新的在线游戏\n * @returns {Promise} - 返回游戏ID\n */\nexport const createGame = async () => {\n  try {\n    const response = await axios.post(`${API_URL}/games`);\n    return response.data;\n  } catch (error) {\n    console.error('Failed to create game:', error);\n    throw error;\n  }\n};\n\n/**\n * 加入现有游戏\n * @param {String} gameId - 游戏ID\n * @param {String} playerName - 玩家名称\n * @returns {Promise} - 返回游戏数据\n */\nexport const joinGame = async (gameId, playerName) => {\n  try {\n    const response = await axios.post(`${API_URL}/games/${gameId}/join`, {\n      playerName\n    });\n    if (socket) {\n      socket.emit('join-game', {\n        gameId,\n        playerName\n      });\n    }\n    return response.data;\n  } catch (error) {\n    console.error('Failed to join game:', error);\n    throw error;\n  }\n};\n\n/**\n * 发送移动棋子请求\n * @param {String} gameId - 游戏ID\n * @param {Object} move - 移动数据 {fromRow, fromCol, toRow, toCol}\n * @param {String} playerId - 玩家ID\n * @returns {void}\n */\nexport const makeMove = (gameId, move, playerId) => {\n  if (socket) {\n    socket.emit('make-move', {\n      gameId,\n      move,\n      playerId\n    });\n  }\n};\n\n/**\n * 获取游戏数据\n * @param {String} gameId - 游戏ID\n * @returns {Promise} - 返回游戏数据\n */\nexport const getGame = async gameId => {\n  try {\n    const response = await axios.get(`${API_URL}/games/${gameId}`);\n    return response.data;\n  } catch (error) {\n    console.error('Failed to get game:', error);\n    throw error;\n  }\n};\n\n/**\n * 投降\n * @param {String} gameId - 游戏ID\n * @param {String} playerId - 玩家ID\n * @returns {void}\n */\nexport const surrender = (gameId, playerId) => {\n  if (socket) {\n    socket.emit('surrender', {\n      gameId,\n      playerId\n    });\n  }\n};\n\n/**\n * 请求悔棋\n * @param {String} gameId - 游戏ID\n * @param {String} playerId - 玩家ID\n * @returns {void}\n */\nexport const requestUndo = (gameId, playerId) => {\n  if (socket) {\n    socket.emit('request-undo', {\n      gameId,\n      playerId\n    });\n  }\n};\n\n/**\n * 响应悔棋请求\n * @param {String} gameId - 游戏ID\n * @param {String} playerId - 玩家ID\n * @param {Boolean} accepted - 是否接受悔棋\n * @returns {void}\n */\nexport const respondToUndoRequest = (gameId, playerId, accepted) => {\n  if (socket) {\n    socket.emit('respond-undo', {\n      gameId,\n      playerId,\n      accepted\n    });\n  }\n};\n\n/**\n * 发送聊天消息\n * @param {String} gameId - 游戏ID\n * @param {String} playerId - 玩家ID\n * @param {String} message - 消息内容\n * @returns {void}\n */\nexport const sendChatMessage = (gameId, playerId, message) => {\n  if (socket) {\n    socket.emit('chat-message', {\n      gameId,\n      playerId,\n      message\n    });\n  }\n};\n\n/**\n * 获取游戏历史记录\n * @param {String} gameId - 游戏ID\n * @returns {Promise} - 返回游戏历史数据\n */\nexport const getGameHistory = async gameId => {\n  try {\n    const response = await axios.get(`${API_URL}/games/${gameId}/history`);\n    return response.data;\n  } catch (error) {\n    console.error('Failed to get game history:', error);\n    throw error;\n  }\n};\n\n/**\n * 断开WebSocket连接\n */\nexport const disconnectSocket = () => {\n  if (socket) {\n    socket.disconnect();\n  }\n};","map":{"version":3,"names":["axios","io","API_URL","process","env","REACT_APP_API_URL","socket","initializeSocket","callbacks","onGameUpdate","onPlayerJoined","onGameStarted","onError","onChatMessage","onUndoRequested","onUndoResponded","onPlayerSurrendered","REACT_APP_SOCKET_URL","on","console","log","data","error","createGame","response","post","joinGame","gameId","playerName","emit","makeMove","move","playerId","getGame","get","surrender","requestUndo","respondToUndoRequest","accepted","sendChatMessage","message","getGameHistory","disconnectSocket","disconnect"],"sources":["/Users/peng/Desktop/人工智能策略/chinese-chess-game/client/src/services/gameService.js"],"sourcesContent":["import axios from 'axios';\nimport io from 'socket.io-client';\n\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\nlet socket;\n\n/**\n * 初始化Socket.io连接\n * @param {Object} callbacks - 回调函数对象\n * @returns {Object} - socket实例\n */\nexport const initializeSocket = (callbacks) => {\n  const {\n    onGameUpdate,\n    onPlayerJoined,\n    onGameStarted,\n    onError,\n    onChatMessage,\n    onUndoRequested,\n    onUndoResponded,\n    onPlayerSurrendered\n  } = callbacks;\n\n  socket = io(process.env.REACT_APP_SOCKET_URL || 'http://localhost:5000');\n\n  socket.on('connect', () => {\n    console.log('Connected to WebSocket server');\n  });\n\n  socket.on('game-update', (data) => {\n    if (onGameUpdate) onGameUpdate(data);\n  });\n\n  socket.on('player-joined', (data) => {\n    if (onPlayerJoined) onPlayerJoined(data);\n  });\n\n  socket.on('game-started', (data) => {\n    if (onGameStarted) onGameStarted(data);\n  });\n\n  socket.on('chat-message', (data) => {\n    if (onChatMessage) onChatMessage(data);\n  });\n\n  socket.on('undo-requested', (data) => {\n    if (onUndoRequested) onUndoRequested(data);\n  });\n\n  socket.on('undo-responded', (data) => {\n    if (onUndoResponded) onUndoResponded(data);\n  });\n\n  socket.on('player-surrendered', (data) => {\n    if (onPlayerSurrendered) onPlayerSurrendered(data);\n  });\n\n  socket.on('error', (error) => {\n    console.error('Socket error:', error);\n    if (onError) onError(error);\n  });\n\n  return socket;\n};\n\n/**\n * 创建新的在线游戏\n * @returns {Promise} - 返回游戏ID\n */\nexport const createGame = async () => {\n  try {\n    const response = await axios.post(`${API_URL}/games`);\n    return response.data;\n  } catch (error) {\n    console.error('Failed to create game:', error);\n    throw error;\n  }\n};\n\n/**\n * 加入现有游戏\n * @param {String} gameId - 游戏ID\n * @param {String} playerName - 玩家名称\n * @returns {Promise} - 返回游戏数据\n */\nexport const joinGame = async (gameId, playerName) => {\n  try {\n    const response = await axios.post(`${API_URL}/games/${gameId}/join`, { playerName });\n    if (socket) {\n      socket.emit('join-game', { gameId, playerName });\n    }\n    return response.data;\n  } catch (error) {\n    console.error('Failed to join game:', error);\n    throw error;\n  }\n};\n\n/**\n * 发送移动棋子请求\n * @param {String} gameId - 游戏ID\n * @param {Object} move - 移动数据 {fromRow, fromCol, toRow, toCol}\n * @param {String} playerId - 玩家ID\n * @returns {void}\n */\nexport const makeMove = (gameId, move, playerId) => {\n  if (socket) {\n    socket.emit('make-move', { gameId, move, playerId });\n  }\n};\n\n/**\n * 获取游戏数据\n * @param {String} gameId - 游戏ID\n * @returns {Promise} - 返回游戏数据\n */\nexport const getGame = async (gameId) => {\n  try {\n    const response = await axios.get(`${API_URL}/games/${gameId}`);\n    return response.data;\n  } catch (error) {\n    console.error('Failed to get game:', error);\n    throw error;\n  }\n};\n\n/**\n * 投降\n * @param {String} gameId - 游戏ID\n * @param {String} playerId - 玩家ID\n * @returns {void}\n */\nexport const surrender = (gameId, playerId) => {\n  if (socket) {\n    socket.emit('surrender', { gameId, playerId });\n  }\n};\n\n/**\n * 请求悔棋\n * @param {String} gameId - 游戏ID\n * @param {String} playerId - 玩家ID\n * @returns {void}\n */\nexport const requestUndo = (gameId, playerId) => {\n  if (socket) {\n    socket.emit('request-undo', { gameId, playerId });\n  }\n};\n\n/**\n * 响应悔棋请求\n * @param {String} gameId - 游戏ID\n * @param {String} playerId - 玩家ID\n * @param {Boolean} accepted - 是否接受悔棋\n * @returns {void}\n */\nexport const respondToUndoRequest = (gameId, playerId, accepted) => {\n  if (socket) {\n    socket.emit('respond-undo', { gameId, playerId, accepted });\n  }\n};\n\n/**\n * 发送聊天消息\n * @param {String} gameId - 游戏ID\n * @param {String} playerId - 玩家ID\n * @param {String} message - 消息内容\n * @returns {void}\n */\nexport const sendChatMessage = (gameId, playerId, message) => {\n  if (socket) {\n    socket.emit('chat-message', { gameId, playerId, message });\n  }\n};\n\n/**\n * 获取游戏历史记录\n * @param {String} gameId - 游戏ID\n * @returns {Promise} - 返回游戏历史数据\n */\nexport const getGameHistory = async (gameId) => {\n  try {\n    const response = await axios.get(`${API_URL}/games/${gameId}/history`);\n    return response.data;\n  } catch (error) {\n    console.error('Failed to get game history:', error);\n    throw error;\n  }\n};\n\n/**\n * 断开WebSocket连接\n */\nexport const disconnectSocket = () => {\n  if (socket) {\n    socket.disconnect();\n  }\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}