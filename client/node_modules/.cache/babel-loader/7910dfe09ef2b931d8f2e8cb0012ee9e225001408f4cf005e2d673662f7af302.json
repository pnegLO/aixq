{"ast":null,"code":"var _jsxFileName = \"/Users/peng/Desktop/\\u4EBA\\u5DE5\\u667A\\u80FD\\u7B56\\u7565/chinese-chess-game/client/src/pages/OnlineGame.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate, useParams, useLocation, Link } from 'react-router-dom';\nimport { initializeBoard, isValidMove, isCheck, checkGameEnd, COLORS } from '../utils/chessRules';\nimport { initializeSocket, joinGame, makeMove as sendMove, getGame, surrender, requestUndo, respondToUndoRequest, disconnectSocket, sendChatMessage } from '../services/gameService';\nimport ChessBoard from '../components/ChessBoard';\nimport ChatBox from '../components/ChatBox';\nimport './Game.css';\nimport io from 'socket.io-client';\n\n// API基础URL\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = 'http://localhost:5000';\nconst OnlineGame = () => {\n  _s();\n  const {\n    gameId: urlGameId\n  } = useParams();\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  // 游戏状态\n  const [board, setBoard] = useState(null);\n  const [selectedCell, setSelectedCell] = useState(null);\n  const [validMoves, setValidMoves] = useState([]);\n  const [currentTurn, setCurrentTurn] = useState(COLORS.RED); // 红方先行\n  const [gameStatus, setGameStatus] = useState('waiting'); // waiting, playing, over\n  const [winner, setWinner] = useState(null);\n\n  // 玩家信息\n  const [gameId, setGameId] = useState(urlGameId || '');\n  const [playerName, setPlayerName] = useState('');\n  const [playerColor, setPlayerColor] = useState(null);\n  const [opponent, setOpponent] = useState(null);\n  const [playerId, setPlayerId] = useState('');\n\n  // 聊天功能\n  const [chatMessages, setChatMessages] = useState([]);\n  const [chatInput, setChatInput] = useState('');\n  const chatEndRef = useRef(null);\n  const [notification, setNotification] = useState('');\n\n  // 悔棋功能\n  const [undoRequest, setUndoRequest] = useState({\n    pending: false,\n    requester: null\n  });\n\n  // Socket连接\n  const socketRef = useRef(null);\n  const [socketConnected, setSocketConnected] = useState(false);\n\n  // 游戏历史记录\n  const [moveHistory, setMoveHistory] = useState([]);\n  const [isCheckState, setIsCheckState] = useState(false);\n\n  // 从URL参数中获取游戏ID和玩家名称\n  useEffect(() => {\n    const searchParams = new URLSearchParams(location.search);\n    const gameIdParam = searchParams.get('gameId');\n    const playerNameParam = searchParams.get('playerName');\n    const isCreator = searchParams.get('isCreator') === 'true';\n    if (gameIdParam && playerNameParam) {\n      setGameId(gameIdParam);\n      setPlayerName(playerNameParam);\n\n      // 如果是创建者，默认为红方\n      if (isCreator) {\n        setPlayerColor(COLORS.RED);\n      }\n\n      // 加入游戏并初始化Socket连接\n      joinGameAndConnect(gameIdParam, playerNameParam);\n    } else {\n      // 如果没有必要的参数，返回主页\n      navigate('/');\n    }\n\n    // 组件卸载时断开Socket连接\n    return () => {\n      if (socketRef.current) {\n        disconnectSocket();\n      }\n    };\n  }, []);\n\n  // 聊天消息自动滚动到底部\n  useEffect(() => {\n    if (chatEndRef.current) {\n      chatEndRef.current.scrollIntoView({\n        behavior: 'smooth'\n      });\n    }\n  }, [chatMessages]);\n\n  // 加入游戏并初始化Socket连接\n  const joinGameAndConnect = async (gameId, playerName) => {\n    try {\n      // 获取游戏信息\n      const gameData = await getGame(gameId);\n\n      // 如果游戏已存在，更新状态\n      if (gameData) {\n        updateGameState(gameData);\n      }\n\n      // 加入游戏\n      const joinResponse = await joinGame(gameId, playerName);\n\n      // 如果玩家颜色还未确定，设置颜色\n      if (!playerColor && joinResponse.playerColor) {\n        setPlayerColor(joinResponse.playerColor);\n      }\n\n      // 初始化Socket连接\n      const socket = io(API_BASE_URL);\n      socketRef.current = socket;\n\n      // 设置Socket事件监听\n      socket.on('connect', () => {\n        setSocketConnected(true);\n      });\n      socket.on('disconnect', () => {\n        setSocketConnected(false);\n      });\n      socket.on('gameUpdate', handleGameUpdate);\n      socket.on('playerJoined', handlePlayerJoined);\n      socket.on('gameStarted', handleGameStarted);\n      socket.on('chatMessage', handleChatMessage);\n      socket.on('undoRequested', handleUndoRequested);\n      socket.on('undoResponded', handleUndoResponded);\n    } catch (error) {\n      console.error('Failed to join game:', error);\n      setGameStatus('error');\n    }\n  };\n\n  // 更新游戏状态\n  const updateGameState = gameData => {\n    if (gameData.board) {\n      setBoard(gameData.board);\n    }\n    if (gameData.currentTurn) {\n      setCurrentTurn(gameData.currentTurn);\n    }\n    if (gameData.status) {\n      setGameStatus(gameData.status);\n    }\n    if (gameData.players) {\n      const otherPlayer = gameData.players.find(p => p.name !== playerName);\n      if (otherPlayer) {\n        setOpponent(otherPlayer);\n      }\n    }\n    if (gameData.moveHistory) {\n      setMoveHistory(gameData.moveHistory);\n    }\n    if (gameData.chatMessages) {\n      setChatMessages(gameData.chatMessages);\n    }\n  };\n\n  // Socket事件处理函数\n  const handleGameUpdate = data => {\n    console.log('Game update received:', data);\n    const {\n      board: newBoard,\n      currentTurn: newTurn,\n      gameStatus: newStatus,\n      winner: newWinner\n    } = data;\n    setBoard(newBoard);\n    setCurrentTurn(newTurn);\n    setGameStatus(newStatus);\n    setWinner(newWinner);\n\n    // 重置选择状态\n    setSelectedCell(null);\n    setValidMoves([]);\n  };\n  const handlePlayerJoined = data => {\n    console.log('Player joined:', data);\n    const {\n      player\n    } = data;\n    setOpponent(player);\n\n    // 显示通知\n    setNotification(`${player.name} 加入了游戏`);\n    setTimeout(() => setNotification(''), 3000);\n  };\n  const handleGameStarted = data => {\n    console.log('Game started:', data);\n    const {\n      board: newBoard,\n      players\n    } = data;\n    setBoard(newBoard);\n    setGameStatus('playing');\n\n    // 确定玩家颜色\n    const self = players.find(p => p.name === playerName);\n    if (self) {\n      setPlayerColor(self.color);\n      setOpponent(players.find(p => p.name !== playerName));\n    }\n\n    // 显示通知\n    setNotification('游戏开始！');\n    setTimeout(() => setNotification(''), 3000);\n  };\n  const handleMoveMade = data => {\n    const {\n      fromRow,\n      fromCol,\n      toRow,\n      toCol,\n      board: newBoard,\n      currentTurn: nextTurn\n    } = data;\n\n    // 更新棋盘\n    setBoard(newBoard);\n    setCurrentTurn(nextTurn);\n\n    // 添加到移动历史\n    addMoveToHistory(fromRow, fromCol, toRow, toCol, data.piece, data.captured);\n\n    // 检查是否将军\n    setIsCheckState(data.isCheck);\n\n    // 检查游戏是否结束\n    if (data.gameStatus === 'over') {\n      setGameStatus('over');\n      setWinner(data.winner);\n    }\n  };\n  const handleChatMessage = message => {\n    setChatMessages(prev => [...prev, message]);\n  };\n  const handleUndoRequested = data => {\n    console.log('Undo requested by:', data.requester);\n    setUndoRequest({\n      pending: true,\n      requester: data.requester\n    });\n  };\n  const handleUndoResponded = data => {\n    console.log('Undo response:', data);\n    const {\n      approved,\n      board: newBoard,\n      currentTurn: newTurn\n    } = data;\n    if (approved) {\n      setBoard(newBoard);\n      setCurrentTurn(newTurn);\n      setNotification('悔棋请求已被接受');\n    } else {\n      setNotification('悔棋请求被拒绝');\n    }\n    setUndoRequest({\n      pending: false,\n      requester: null\n    });\n    setTimeout(() => setNotification(''), 3000);\n  };\n  const handlePlayerSurrendered = data => {\n    setGameStatus('over');\n    setWinner(data.winner);\n    addChatMessage({\n      sender: 'System',\n      text: `${data.playerName} 认输了，${data.winner === COLORS.RED ? '红方' : '黑方'}获胜！`,\n      timestamp: new Date().toISOString()\n    });\n  };\n  const handleError = error => {\n    console.error('Socket error:', error);\n  };\n\n  // 添加移动到历史记录\n  const addMoveToHistory = (fromRow, fromCol, toRow, toCol, piece, captured) => {\n    setMoveHistory(prev => [...prev, {\n      fromRow,\n      fromCol,\n      toRow,\n      toCol,\n      piece,\n      captured,\n      timestamp: new Date().toISOString()\n    }]);\n  };\n\n  // 添加聊天消息\n  const addChatMessage = message => {\n    setChatMessages(prev => [...prev, message]);\n  };\n\n  // 格子点击处理\n  const handleCellClick = (row, col) => {\n    // 游戏未开始、已结束或不是玩家回合时不允许操作\n    if (gameStatus !== 'playing' || currentTurn !== playerColor) return;\n    const clickedPiece = board[row][col];\n\n    // 如果已选中棋子，尝试移动\n    if (selectedCell) {\n      const {\n        row: selectedRow,\n        col: selectedCol\n      } = selectedCell;\n      const selectedPiece = board[selectedRow][selectedCol];\n\n      // 检查是否是有效移动\n      if (selectedPiece && selectedPiece.color === currentTurn && validMoves.some(move => move.row === row && move.col === col)) {\n        // 发送移动请求\n        sendMove(gameId, {\n          fromRow: selectedRow,\n          fromCol: selectedCol,\n          toRow: row,\n          toCol: col\n        }, playerId);\n\n        // 清除选择状态\n        setSelectedCell(null);\n        setValidMoves([]);\n      } else if (clickedPiece && clickedPiece.color === currentTurn) {\n        // 选择新的己方棋子\n        selectPiece(row, col);\n      } else {\n        // 无效点击，取消选择\n        setSelectedCell(null);\n        setValidMoves([]);\n      }\n    }\n    // 如果未选中棋子，选择一个棋子\n    else if (clickedPiece && clickedPiece.color === currentTurn) {\n      selectPiece(row, col);\n    }\n  };\n\n  // 选择棋子，计算有效移动\n  const selectPiece = (row, col) => {\n    setSelectedCell({\n      row,\n      col\n    });\n\n    // 计算有效移动\n    const piece = board[row][col];\n    const newValidMoves = [];\n    for (let toRow = 0; toRow < 10; toRow++) {\n      for (let toCol = 0; toCol < 9; toCol++) {\n        if (isValidMove(piece, board, row, col, toRow, toCol)) {\n          // 模拟移动，检查是否会导致自己被将军\n          const newBoard = JSON.parse(JSON.stringify(board));\n          newBoard[toRow][toCol] = newBoard[row][col];\n          newBoard[row][col] = null;\n          if (!isCheck(newBoard, piece.color)) {\n            newValidMoves.push({\n              row: toRow,\n              col: toCol\n            });\n          }\n        }\n      }\n    }\n    setValidMoves(newValidMoves);\n  };\n\n  // 复制游戏ID到剪贴板\n  const copyGameId = () => {\n    navigator.clipboard.writeText(gameId);\n    addChatMessage({\n      sender: 'System',\n      text: '游戏ID已复制到剪贴板',\n      timestamp: new Date().toISOString()\n    });\n  };\n\n  // 发送聊天消息\n  const handleSendMessage = message => {\n    if (playerId && gameId) {\n      sendChatMessage(gameId, playerId, message);\n    }\n  };\n\n  // 请求悔棋\n  const handleRequestUndo = () => {\n    requestUndo(gameId, playerId);\n    addChatMessage({\n      sender: 'System',\n      text: '您已请求悔棋，等待对方回应',\n      timestamp: new Date().toISOString()\n    });\n  };\n\n  // 回应悔棋请求\n  const handleRespondUndo = accepted => {\n    respondToUndoRequest(gameId, playerId, accepted);\n    setUndoRequest({\n      pending: false,\n      requester: null\n    });\n  };\n\n  // 投降\n  const handleSurrender = () => {\n    if (window.confirm('确定要认输吗？')) {\n      surrender(gameId, playerId);\n    }\n  };\n\n  // 返回主页\n  const goToHome = () => {\n    navigate('/');\n  };\n\n  // 渲染移动历史\n  const renderMoveHistory = () => {\n    if (moveHistory.length === 0) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u6682\\u65E0\\u79FB\\u52A8\\u8BB0\\u5F55\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 14\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"move-list\",\n      children: moveHistory.map((move, index) => {\n        const pieceType = getPieceTypeName(move.piece.type);\n        const pieceColor = move.piece.color === COLORS.RED ? '红' : '黑';\n        const capturedText = move.captured ? `，吃${move.captured.color === COLORS.RED ? '红' : '黑'}${getPieceTypeName(move.captured.type)}` : '';\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [index + 1, \". \", pieceColor, pieceType, \"\\uFF1A\", getPositionName(move.fromRow, move.fromCol), \" \\u81F3 \", getPositionName(move.toRow, move.toCol), capturedText]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 7\n    }, this);\n  };\n\n  // 获取棋子类型的中文名称\n  const getPieceTypeName = type => {\n    const typeNames = {\n      general: '将/帅',\n      advisor: '士/仕',\n      elephant: '象/相',\n      horse: '马',\n      chariot: '车',\n      cannon: '炮',\n      soldier: '卒/兵'\n    };\n    return typeNames[type] || type;\n  };\n\n  // 获取位置的坐标名称\n  const getPositionName = (row, col) => {\n    const colNames = ['九', '八', '七', '六', '五', '四', '三', '二', '一'];\n    const rowNames = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10'];\n    return `${colNames[col]}${rowNames[row]}`;\n  };\n\n  // 渲染聊天消息\n  const renderChatMessages = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-messages\",\n      children: chatMessages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `chat-message ${msg.sender === 'System' ? 'system-message' : msg.sender === playerName ? 'my-message' : 'opponent-message'}`,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"sender\",\n          children: msg.sender === 'System' ? '' : `${msg.sender}: `\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 470,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"message-text\",\n          children: msg.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: index === chatMessages.length - 1 ? chatEndRef : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 467,\n      columnNumber: 7\n    }, this);\n  };\n  if (!board) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading\",\n    children: \"\\u52A0\\u8F7D\\u4E2D...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 479,\n    columnNumber: 22\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"online-game-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u5728\\u7EBF\\u5BF9\\u6218\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 483,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-id-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"game-id-label\",\n        children: [\"\\u6E38\\u620FID: \", gameId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 487,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"copy-button\",\n        onClick: () => {\n          navigator.clipboard.writeText(gameId);\n          setNotification('游戏ID已复制到剪贴板');\n        },\n        children: \"\\u590D\\u5236ID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 488,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: `/game-history/${gameId}`,\n        className: \"history-link\",\n        children: \"\\u67E5\\u770B\\u5386\\u53F2\\u8BB0\\u5F55\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 497,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 486,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-section\",\n        children: board && /*#__PURE__*/_jsxDEV(ChessBoard, {\n          board: board,\n          selectedCell: selectedCell,\n          validMoves: validMoves,\n          onCellClick: handleCellClick,\n          reversed: playerColor === COLORS.BLACK\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 505,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 503,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"side-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"game-status\",\n          children: [gameStatus === 'waiting' && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"waiting-message\",\n            children: \"\\u7B49\\u5F85\\u5BF9\\u624B\\u52A0\\u5165...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 519,\n            columnNumber: 15\n          }, this), gameStatus === 'playing' && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"\\u5F53\\u524D\\u56DE\\u5408: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: currentTurn === COLORS.RED ? 'red-text' : 'black-text',\n                children: currentTurn === COLORS.RED ? '红方' : '黑方'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 524,\n                columnNumber: 26\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 524,\n              columnNumber: 17\n            }, this), isCheckState && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"check-warning\",\n              children: \"\\u5C06\\u519B\\uFF01\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 527,\n              columnNumber: 34\n            }, this)]\n          }, void 0, true), gameStatus === 'over' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"game-result\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"\\u6E38\\u620F\\u7ED3\\u675F\\uFF01\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 533,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [winner === COLORS.RED ? '红方' : '黑方', \"\\u83B7\\u80DC\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 534,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 532,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 517,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-container\",\n          children: /*#__PURE__*/_jsxDEV(ChatBox, {\n            messages: chatMessages,\n            onSendMessage: handleSendMessage,\n            currentPlayer: playerName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 541,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 540,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"game-controls\",\n          children: [gameStatus === 'playing' && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn secondary-btn\",\n              onClick: handleRequestUndo,\n              disabled: moveHistory.length < 2 || currentTurn !== playerColor,\n              children: \"\\u8BF7\\u6C42\\u6094\\u68CB\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 552,\n              columnNumber: 17\n            }, this), undoRequest.pending && undoRequest.requester !== playerName && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn primary-btn\",\n                onClick: () => handleRespondUndo(true),\n                children: \"\\u63A5\\u53D7\\u6094\\u68CB\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 562,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn secondary-btn\",\n                onClick: () => handleRespondUndo(false),\n                children: \"\\u62D2\\u7EDD\\u6094\\u68CB\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 569,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn secondary-btn\",\n              onClick: handleSurrender,\n              disabled: gameStatus !== 'playing',\n              children: \"\\u8BA4\\u8F93\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 578,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 551,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn secondary-btn\",\n            onClick: goToHome,\n            children: \"\\u8FD4\\u56DE\\u4E3B\\u9875\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 588,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 549,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 515,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 502,\n      columnNumber: 7\n    }, this), gameStatus !== 'waiting' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"move-history\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\u79FB\\u52A8\\u8BB0\\u5F55\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 601,\n        columnNumber: 11\n      }, this), renderMoveHistory()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 600,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 482,\n    columnNumber: 5\n  }, this);\n};\n_s(OnlineGame, \"KbSbt0szRKmoWIYsE21z1PDENUE=\", false, function () {\n  return [useParams, useNavigate, useLocation];\n});\n_c = OnlineGame;\nexport default OnlineGame;\nvar _c;\n$RefreshReg$(_c, \"OnlineGame\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useNavigate","useParams","useLocation","Link","initializeBoard","isValidMove","isCheck","checkGameEnd","COLORS","initializeSocket","joinGame","makeMove","sendMove","getGame","surrender","requestUndo","respondToUndoRequest","disconnectSocket","sendChatMessage","ChessBoard","ChatBox","io","jsxDEV","_jsxDEV","Fragment","_Fragment","API_BASE_URL","OnlineGame","_s","gameId","urlGameId","navigate","location","board","setBoard","selectedCell","setSelectedCell","validMoves","setValidMoves","currentTurn","setCurrentTurn","RED","gameStatus","setGameStatus","winner","setWinner","setGameId","playerName","setPlayerName","playerColor","setPlayerColor","opponent","setOpponent","playerId","setPlayerId","chatMessages","setChatMessages","chatInput","setChatInput","chatEndRef","notification","setNotification","undoRequest","setUndoRequest","pending","requester","socketRef","socketConnected","setSocketConnected","moveHistory","setMoveHistory","isCheckState","setIsCheckState","searchParams","URLSearchParams","search","gameIdParam","get","playerNameParam","isCreator","joinGameAndConnect","current","scrollIntoView","behavior","gameData","updateGameState","joinResponse","socket","on","handleGameUpdate","handlePlayerJoined","handleGameStarted","handleChatMessage","handleUndoRequested","handleUndoResponded","error","console","status","players","otherPlayer","find","p","name","data","log","newBoard","newTurn","newStatus","newWinner","player","setTimeout","self","color","handleMoveMade","fromRow","fromCol","toRow","toCol","nextTurn","addMoveToHistory","piece","captured","message","prev","approved","handlePlayerSurrendered","addChatMessage","sender","text","timestamp","Date","toISOString","handleError","handleCellClick","row","col","clickedPiece","selectedRow","selectedCol","selectedPiece","some","move","selectPiece","newValidMoves","JSON","parse","stringify","push","copyGameId","navigator","clipboard","writeText","handleSendMessage","handleRequestUndo","handleRespondUndo","accepted","handleSurrender","window","confirm","goToHome","renderMoveHistory","length","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","index","pieceType","getPieceTypeName","type","pieceColor","capturedText","getPositionName","typeNames","general","advisor","elephant","horse","chariot","cannon","soldier","colNames","rowNames","renderChatMessages","msg","ref","onClick","to","onCellClick","reversed","BLACK","messages","onSendMessage","currentPlayer","disabled","_c","$RefreshReg$"],"sources":["/Users/peng/Desktop/人工智能策略/chinese-chess-game/client/src/pages/OnlineGame.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate, useParams, useLocation, Link } from 'react-router-dom';\nimport { \n  initializeBoard, \n  isValidMove, \n  isCheck, \n  checkGameEnd, \n  COLORS \n} from '../utils/chessRules';\nimport {\n  initializeSocket,\n  joinGame,\n  makeMove as sendMove,\n  getGame,\n  surrender,\n  requestUndo,\n  respondToUndoRequest,\n  disconnectSocket,\n  sendChatMessage\n} from '../services/gameService';\nimport ChessBoard from '../components/ChessBoard';\nimport ChatBox from '../components/ChatBox';\nimport './Game.css';\nimport io from 'socket.io-client';\n\n// API基础URL\nconst API_BASE_URL = 'http://localhost:5000';\n\nconst OnlineGame = () => {\n  const { gameId: urlGameId } = useParams();\n  const navigate = useNavigate();\n  const location = useLocation();\n  \n  // 游戏状态\n  const [board, setBoard] = useState(null);\n  const [selectedCell, setSelectedCell] = useState(null);\n  const [validMoves, setValidMoves] = useState([]);\n  const [currentTurn, setCurrentTurn] = useState(COLORS.RED); // 红方先行\n  const [gameStatus, setGameStatus] = useState('waiting'); // waiting, playing, over\n  const [winner, setWinner] = useState(null);\n  \n  // 玩家信息\n  const [gameId, setGameId] = useState(urlGameId || '');\n  const [playerName, setPlayerName] = useState('');\n  const [playerColor, setPlayerColor] = useState(null);\n  const [opponent, setOpponent] = useState(null);\n  const [playerId, setPlayerId] = useState('');\n  \n  // 聊天功能\n  const [chatMessages, setChatMessages] = useState([]);\n  const [chatInput, setChatInput] = useState('');\n  const chatEndRef = useRef(null);\n  const [notification, setNotification] = useState('');\n  \n  // 悔棋功能\n  const [undoRequest, setUndoRequest] = useState({ pending: false, requester: null });\n  \n  // Socket连接\n  const socketRef = useRef(null);\n  const [socketConnected, setSocketConnected] = useState(false);\n  \n  // 游戏历史记录\n  const [moveHistory, setMoveHistory] = useState([]);\n  const [isCheckState, setIsCheckState] = useState(false);\n  \n  // 从URL参数中获取游戏ID和玩家名称\n  useEffect(() => {\n    const searchParams = new URLSearchParams(location.search);\n    const gameIdParam = searchParams.get('gameId');\n    const playerNameParam = searchParams.get('playerName');\n    const isCreator = searchParams.get('isCreator') === 'true';\n    \n    if (gameIdParam && playerNameParam) {\n      setGameId(gameIdParam);\n      setPlayerName(playerNameParam);\n      \n      // 如果是创建者，默认为红方\n      if (isCreator) {\n        setPlayerColor(COLORS.RED);\n      }\n      \n      // 加入游戏并初始化Socket连接\n      joinGameAndConnect(gameIdParam, playerNameParam);\n    } else {\n      // 如果没有必要的参数，返回主页\n      navigate('/');\n    }\n    \n    // 组件卸载时断开Socket连接\n    return () => {\n      if (socketRef.current) {\n        disconnectSocket();\n      }\n    };\n  }, []);\n\n  // 聊天消息自动滚动到底部\n  useEffect(() => {\n    if (chatEndRef.current) {\n      chatEndRef.current.scrollIntoView({ behavior: 'smooth' });\n    }\n  }, [chatMessages]);\n\n  // 加入游戏并初始化Socket连接\n  const joinGameAndConnect = async (gameId, playerName) => {\n    try {\n      // 获取游戏信息\n      const gameData = await getGame(gameId);\n      \n      // 如果游戏已存在，更新状态\n      if (gameData) {\n        updateGameState(gameData);\n      }\n      \n      // 加入游戏\n      const joinResponse = await joinGame(gameId, playerName);\n      \n      // 如果玩家颜色还未确定，设置颜色\n      if (!playerColor && joinResponse.playerColor) {\n        setPlayerColor(joinResponse.playerColor);\n      }\n      \n      // 初始化Socket连接\n      const socket = io(API_BASE_URL);\n      \n      socketRef.current = socket;\n      \n      // 设置Socket事件监听\n      socket.on('connect', () => {\n        setSocketConnected(true);\n      });\n\n      socket.on('disconnect', () => {\n        setSocketConnected(false);\n      });\n\n      socket.on('gameUpdate', handleGameUpdate);\n      socket.on('playerJoined', handlePlayerJoined);\n      socket.on('gameStarted', handleGameStarted);\n      socket.on('chatMessage', handleChatMessage);\n      socket.on('undoRequested', handleUndoRequested);\n      socket.on('undoResponded', handleUndoResponded);\n    } catch (error) {\n      console.error('Failed to join game:', error);\n      setGameStatus('error');\n    }\n  };\n\n  // 更新游戏状态\n  const updateGameState = (gameData) => {\n    if (gameData.board) {\n      setBoard(gameData.board);\n    }\n    \n    if (gameData.currentTurn) {\n      setCurrentTurn(gameData.currentTurn);\n    }\n    \n    if (gameData.status) {\n      setGameStatus(gameData.status);\n    }\n    \n    if (gameData.players) {\n      const otherPlayer = gameData.players.find(p => p.name !== playerName);\n      if (otherPlayer) {\n        setOpponent(otherPlayer);\n      }\n    }\n    \n    if (gameData.moveHistory) {\n      setMoveHistory(gameData.moveHistory);\n    }\n    \n    if (gameData.chatMessages) {\n      setChatMessages(gameData.chatMessages);\n    }\n  };\n\n  // Socket事件处理函数\n  const handleGameUpdate = (data) => {\n    console.log('Game update received:', data);\n    const { board: newBoard, currentTurn: newTurn, gameStatus: newStatus, winner: newWinner } = data;\n    \n    setBoard(newBoard);\n    setCurrentTurn(newTurn);\n    setGameStatus(newStatus);\n    setWinner(newWinner);\n    \n    // 重置选择状态\n    setSelectedCell(null);\n    setValidMoves([]);\n  };\n\n  const handlePlayerJoined = (data) => {\n    console.log('Player joined:', data);\n    const { player } = data;\n    setOpponent(player);\n    \n    // 显示通知\n    setNotification(`${player.name} 加入了游戏`);\n    setTimeout(() => setNotification(''), 3000);\n  };\n\n  const handleGameStarted = (data) => {\n    console.log('Game started:', data);\n    const { board: newBoard, players } = data;\n    \n    setBoard(newBoard);\n    setGameStatus('playing');\n    \n    // 确定玩家颜色\n    const self = players.find(p => p.name === playerName);\n    if (self) {\n      setPlayerColor(self.color);\n      setOpponent(players.find(p => p.name !== playerName));\n    }\n    \n    // 显示通知\n    setNotification('游戏开始！');\n    setTimeout(() => setNotification(''), 3000);\n  };\n\n  const handleMoveMade = (data) => {\n    const { fromRow, fromCol, toRow, toCol, board: newBoard, currentTurn: nextTurn } = data;\n    \n    // 更新棋盘\n    setBoard(newBoard);\n    setCurrentTurn(nextTurn);\n    \n    // 添加到移动历史\n    addMoveToHistory(fromRow, fromCol, toRow, toCol, data.piece, data.captured);\n    \n    // 检查是否将军\n    setIsCheckState(data.isCheck);\n    \n    // 检查游戏是否结束\n    if (data.gameStatus === 'over') {\n      setGameStatus('over');\n      setWinner(data.winner);\n    }\n  };\n\n  const handleChatMessage = (message) => {\n    setChatMessages(prev => [...prev, message]);\n  };\n\n  const handleUndoRequested = (data) => {\n    console.log('Undo requested by:', data.requester);\n    setUndoRequest({ pending: true, requester: data.requester });\n  };\n\n  const handleUndoResponded = (data) => {\n    console.log('Undo response:', data);\n    const { approved, board: newBoard, currentTurn: newTurn } = data;\n    \n    if (approved) {\n      setBoard(newBoard);\n      setCurrentTurn(newTurn);\n      setNotification('悔棋请求已被接受');\n    } else {\n      setNotification('悔棋请求被拒绝');\n    }\n    \n    setUndoRequest({ pending: false, requester: null });\n    setTimeout(() => setNotification(''), 3000);\n  };\n\n  const handlePlayerSurrendered = (data) => {\n    setGameStatus('over');\n    setWinner(data.winner);\n    \n    addChatMessage({\n      sender: 'System',\n      text: `${data.playerName} 认输了，${data.winner === COLORS.RED ? '红方' : '黑方'}获胜！`,\n      timestamp: new Date().toISOString()\n    });\n  };\n\n  const handleError = (error) => {\n    console.error('Socket error:', error);\n  };\n\n  // 添加移动到历史记录\n  const addMoveToHistory = (fromRow, fromCol, toRow, toCol, piece, captured) => {\n    setMoveHistory(prev => [...prev, {\n      fromRow,\n      fromCol,\n      toRow,\n      toCol,\n      piece,\n      captured,\n      timestamp: new Date().toISOString()\n    }]);\n  };\n\n  // 添加聊天消息\n  const addChatMessage = (message) => {\n    setChatMessages(prev => [...prev, message]);\n  };\n\n  // 格子点击处理\n  const handleCellClick = (row, col) => {\n    // 游戏未开始、已结束或不是玩家回合时不允许操作\n    if (gameStatus !== 'playing' || currentTurn !== playerColor) return;\n    \n    const clickedPiece = board[row][col];\n    \n    // 如果已选中棋子，尝试移动\n    if (selectedCell) {\n      const { row: selectedRow, col: selectedCol } = selectedCell;\n      const selectedPiece = board[selectedRow][selectedCol];\n      \n      // 检查是否是有效移动\n      if (\n        selectedPiece && \n        selectedPiece.color === currentTurn &&\n        validMoves.some(move => move.row === row && move.col === col)\n      ) {\n        // 发送移动请求\n        sendMove(gameId, {\n          fromRow: selectedRow,\n          fromCol: selectedCol,\n          toRow: row,\n          toCol: col\n        }, playerId);\n        \n        // 清除选择状态\n        setSelectedCell(null);\n        setValidMoves([]);\n      } else if (clickedPiece && clickedPiece.color === currentTurn) {\n        // 选择新的己方棋子\n        selectPiece(row, col);\n      } else {\n        // 无效点击，取消选择\n        setSelectedCell(null);\n        setValidMoves([]);\n      }\n    } \n    // 如果未选中棋子，选择一个棋子\n    else if (clickedPiece && clickedPiece.color === currentTurn) {\n      selectPiece(row, col);\n    }\n  };\n\n  // 选择棋子，计算有效移动\n  const selectPiece = (row, col) => {\n    setSelectedCell({ row, col });\n    \n    // 计算有效移动\n    const piece = board[row][col];\n    const newValidMoves = [];\n    \n    for (let toRow = 0; toRow < 10; toRow++) {\n      for (let toCol = 0; toCol < 9; toCol++) {\n        if (isValidMove(piece, board, row, col, toRow, toCol)) {\n          // 模拟移动，检查是否会导致自己被将军\n          const newBoard = JSON.parse(JSON.stringify(board));\n          newBoard[toRow][toCol] = newBoard[row][col];\n          newBoard[row][col] = null;\n          \n          if (!isCheck(newBoard, piece.color)) {\n            newValidMoves.push({ row: toRow, col: toCol });\n          }\n        }\n      }\n    }\n    \n    setValidMoves(newValidMoves);\n  };\n\n  // 复制游戏ID到剪贴板\n  const copyGameId = () => {\n    navigator.clipboard.writeText(gameId);\n    \n    addChatMessage({\n      sender: 'System',\n      text: '游戏ID已复制到剪贴板',\n      timestamp: new Date().toISOString()\n    });\n  };\n\n  // 发送聊天消息\n  const handleSendMessage = (message) => {\n    if (playerId && gameId) {\n      sendChatMessage(gameId, playerId, message);\n    }\n  };\n\n  // 请求悔棋\n  const handleRequestUndo = () => {\n    requestUndo(gameId, playerId);\n    \n    addChatMessage({\n      sender: 'System',\n      text: '您已请求悔棋，等待对方回应',\n      timestamp: new Date().toISOString()\n    });\n  };\n\n  // 回应悔棋请求\n  const handleRespondUndo = (accepted) => {\n    respondToUndoRequest(gameId, playerId, accepted);\n    setUndoRequest({ pending: false, requester: null });\n  };\n\n  // 投降\n  const handleSurrender = () => {\n    if (window.confirm('确定要认输吗？')) {\n      surrender(gameId, playerId);\n    }\n  };\n\n  // 返回主页\n  const goToHome = () => {\n    navigate('/');\n  };\n\n  // 渲染移动历史\n  const renderMoveHistory = () => {\n    if (moveHistory.length === 0) {\n      return <p>暂无移动记录</p>;\n    }\n    \n    return (\n      <ul className=\"move-list\">\n        {moveHistory.map((move, index) => {\n          const pieceType = getPieceTypeName(move.piece.type);\n          const pieceColor = move.piece.color === COLORS.RED ? '红' : '黑';\n          const capturedText = move.captured ? `，吃${move.captured.color === COLORS.RED ? '红' : '黑'}${getPieceTypeName(move.captured.type)}` : '';\n          \n          return (\n            <li key={index}>\n              {index + 1}. {pieceColor}{pieceType}：{getPositionName(move.fromRow, move.fromCol)} 至 {getPositionName(move.toRow, move.toCol)}{capturedText}\n            </li>\n          );\n        })}\n      </ul>\n    );\n  };\n\n  // 获取棋子类型的中文名称\n  const getPieceTypeName = (type) => {\n    const typeNames = {\n      general: '将/帅',\n      advisor: '士/仕',\n      elephant: '象/相',\n      horse: '马',\n      chariot: '车',\n      cannon: '炮',\n      soldier: '卒/兵'\n    };\n    \n    return typeNames[type] || type;\n  };\n\n  // 获取位置的坐标名称\n  const getPositionName = (row, col) => {\n    const colNames = ['九', '八', '七', '六', '五', '四', '三', '二', '一'];\n    const rowNames = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10'];\n    \n    return `${colNames[col]}${rowNames[row]}`;\n  };\n\n  // 渲染聊天消息\n  const renderChatMessages = () => {\n    return (\n      <div className=\"chat-messages\">\n        {chatMessages.map((msg, index) => (\n          <div key={index} className={`chat-message ${msg.sender === 'System' ? 'system-message' : (msg.sender === playerName ? 'my-message' : 'opponent-message')}`}>\n            <span className=\"sender\">{msg.sender === 'System' ? '' : `${msg.sender}: `}</span>\n            <span className=\"message-text\">{msg.text}</span>\n            <div ref={index === chatMessages.length - 1 ? chatEndRef : null} />\n          </div>\n        ))}\n      </div>\n    );\n  };\n\n  if (!board) return <div className=\"loading\">加载中...</div>;\n\n  return (\n    <div className=\"online-game-page\">\n      <h1>在线对战</h1>\n      \n      {/* 游戏ID信息 */}\n      <div className=\"game-id-section\">\n        <span className=\"game-id-label\">游戏ID: {gameId}</span>\n        <button \n          className=\"copy-button\"\n          onClick={() => {\n            navigator.clipboard.writeText(gameId);\n            setNotification('游戏ID已复制到剪贴板');\n          }}\n        >\n          复制ID\n        </button>\n        <Link to={`/game-history/${gameId}`} className=\"history-link\">\n          查看历史记录\n        </Link>\n      </div>\n      \n      <div className=\"game-container\">\n        <div className=\"board-section\">\n          {board && (\n            <ChessBoard\n              board={board}\n              selectedCell={selectedCell}\n              validMoves={validMoves}\n              onCellClick={handleCellClick}\n              reversed={playerColor === COLORS.BLACK}\n            />\n          )}\n        </div>\n        \n        <div className=\"side-section\">\n          {/* 游戏状态信息 */}\n          <div className=\"game-status\">\n            {gameStatus === 'waiting' && (\n              <p className=\"waiting-message\">等待对手加入...</p>\n            )}\n            \n            {gameStatus === 'playing' && (\n              <>\n                <p>当前回合: <span className={currentTurn === COLORS.RED ? 'red-text' : 'black-text'}>\n                  {currentTurn === COLORS.RED ? '红方' : '黑方'}\n                </span></p>\n                {isCheckState && <p className=\"check-warning\">将军！</p>}\n              </>\n            )}\n            \n            {gameStatus === 'over' && (\n              <div className=\"game-result\">\n                <p>游戏结束！</p>\n                <p>{winner === COLORS.RED ? '红方' : '黑方'}获胜</p>\n              </div>\n            )}\n          </div>\n          \n          {/* 聊天区域 */}\n          <div className=\"chat-container\">\n            <ChatBox\n              messages={chatMessages}\n              onSendMessage={handleSendMessage}\n              currentPlayer={playerName}\n            />\n          </div>\n          \n          {/* 游戏控制按钮 */}\n          <div className=\"game-controls\">\n            {gameStatus === 'playing' && (\n              <div>\n                <button \n                  className=\"btn secondary-btn\" \n                  onClick={handleRequestUndo}\n                  disabled={moveHistory.length < 2 || currentTurn !== playerColor}\n                >\n                  请求悔棋\n                </button>\n                \n                {undoRequest.pending && undoRequest.requester !== playerName && (\n                  <>\n                    <button \n                      className=\"btn primary-btn\" \n                      onClick={() => handleRespondUndo(true)}\n                    >\n                      接受悔棋\n                    </button>\n                    \n                    <button \n                      className=\"btn secondary-btn\" \n                      onClick={() => handleRespondUndo(false)}\n                    >\n                      拒绝悔棋\n                    </button>\n                  </>\n                )}\n                \n                <button \n                  className=\"btn secondary-btn\" \n                  onClick={handleSurrender}\n                  disabled={gameStatus !== 'playing'}\n                >\n                  认输\n                </button>\n              </div>\n            )}\n            \n            <button \n              className=\"btn secondary-btn\" \n              onClick={goToHome}\n            >\n              返回主页\n            </button>\n          </div>\n        </div>\n      </div>\n      \n      {/* 移动历史 */}\n      {gameStatus !== 'waiting' && (\n        <div className=\"move-history\">\n          <h3>移动记录</h3>\n          {renderMoveHistory()}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default OnlineGame; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}